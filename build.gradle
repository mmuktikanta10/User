plugins {
    id 'java'
  //  id 'checkstyle'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.shopping'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.8")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.modelmapper:modelmapper:3.1.1'
   // implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'
//    checkstyle group: 'com.puppycrawl.tools', name: 'checkstyle', version: '8.45'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging.showStandardStreams=true
    testLogging{
        events "passed", "skipped","failed"
    }
}
/*
checkstyle {
    toolVersion = "8.45" // Specify the Checkstyle version
    configFile = file('src/main/resources/config/checkstyle.xml') // Path to your Checkstyle configuration file
    showViolations = true // Optional: Show Checkstyle violations during the build
}
checkstyleMain{
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}
tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = true
        html.required = true
    }
}
sourceSets {
    main {
        resources {
            srcDirs 'src/main/resources'
        }
    }
}*/
